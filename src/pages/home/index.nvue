<template>
  <view class="home">
    <view class="banner">
      <image
        src=""
        mode="scaleToFill"
      />
    </view>
    <u-tabbar
			:value="0"
			:fixed="true"
			:placeholder="true"
			:safeAreaInsetBottom="true"
			inactiveColor="#000"
			activeColor="#FD5449"
		>
			<u-tabbar-item v-for="(item,index) in tabbarList" :key="index" :text="item.text" :icon="item.icon" @click="swichTab" ></u-tabbar-item>
		</u-tabbar>
   
  </view>
  
</template>

<script>
import { mapGetters } from 'vuex'
export default {
  name: "home",
  components: {},
  props: {},
  data() {
    return {}
  },
  computed: {
      ...mapGetters([
				'tabbarList',
			])
  },
  methods: {
    swichTab(e){
      uni.switchTab({
					url:'/' + this.tabbarList[e].pagePath,
          fail:function(res){
            console.log(res)
          }
			})
    },
  },
  watch: {},

  // 页面周期函数--监听页面加载
  onLoad() {},
  // 页面周期函数--监听页面初次渲染完成
  onReady() {},
  // 页面周期函数--监听页面显示(not-nvue)
  onShow() {},
  // 页面周期函数--监听页面隐藏
  onHide() {},
  // 页面周期函数--监听页面卸载
  onUnload() {},
  // 页面处理函数--监听用户下拉动作
  // onPullDownRefresh() { uni.stopPullDownRefresh(); },
  // 页面处理函数--监听用户上拉触底
  // onReachBottom() {},
  // 页面处理函数--监听页面滚动(not-nvue)
  // onPageScroll(event) {},
  // 页面处理函数--用户点击右上角分享
  // onShareAppMessage(options) {},
} 
</script>

<style scoped></style>