<template>
    <view class="content">
        <view class="side-bar">
            <view v-for="(item,index) in oneLevelclassList" :class="{active:isActive == index}" :key="item.id" @click="handleGetTwoLevelClass(item,index)">{{item.name}}</view>
        </view>
        <view class="main">
            <u-loading-icon v-if="isLoading"></u-loading-icon>
            <u-empty
                mode="data"
                text="当前分类下没有二级分类"
                v-if="twoLevelclassList.length == 0"
            >
            </u-empty>
            <u-cell v-else v-for="item in twoLevelclassList" :title="item.name" :key="item.id"></u-cell>
        </view>
    </view>
    
</template>

<script>
import {getClassList} from '@/api/mall'
export default {
    name: 'MerchantH5CliSideBar',

    data() {
        return {
            pid:undefined,
            isActive:0,
            oneLevelclassList:[],
            twoLevelclassList:[],
            isLoading:false
        };
    },
    props:{
        userInfo:{
            type:Object
        }
    },
    created() {
        console.log(this.userInfo);
        this.handleGetOneLevelClass(1)
    },

    methods: {
        handleGetTwoLevelClass(item,index){
            this.isActive = index
            this.pid = item.id
            this.handleGetOneLevelClass()
        },
        handleGetOneLevelClass(type){
            this.isLoading = true
            getClassList(this.pid).then(res => {
                console.log(res);
                if(res.code == 'R000' && res.data){
                    if(type == 1){
                        this.oneLevelclassList = res.data
                    }else{
                        this.twoLevelclassList = res.data
                        
                    }
                this.isLoading = false
                }else{
                    if(type !== 1){
                        this.twoLevelclassList = []
                        this.isLoading = false
                    }
                }
            }).catch(error => {
                console.log(error);
            })
        }
    },
};
</script>

<style lang="scss" scoped>
    .u-loading-icon{
        width: 100%;
        height: 100%;
    }

    .u-empty{
        width: 100%;
        padding-top: 100rpx;
    }
    page{
        height: 100%;
    }
    .content{
        width: 100%;
        height: calc(100% - 278rpx);
        background-color: #f4f4f4;
        padding-top: 10rpx;
        flex-direction: row;
    }
    .side-bar{
        width: 200rpx;
        height: 100%;
        background: #f4f4f4;
        view{
            height: 80rpx;
            padding-left: 30rpx;
            line-height: 80rpx;
            background: #f4f4f4;
            border-radius: 10rpx 0  0 10rpx;
            position: relative;
            &:after{
                width:8rpx;
                height: 100%;
                content:'';
                position: absolute;
                left:0;
                top:0;
                background-color: rgb(253, 84, 73);
                opacity: 0;
            }
            &.active{
               
                background-color: #fff;
                &:after{
                    opacity: 1;
                }
            }
        }
    }
    .main{
        flex: 1;
        height: 100%;
        background-color: #fff;
    }
</style>